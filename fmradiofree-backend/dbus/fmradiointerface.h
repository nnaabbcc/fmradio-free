/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -v -c FMRadioInterface -p fmradiointerface fmradio-backend.xml com.nnaabbcc.fmradio
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef FMRADIOINTERFACE_H_1363064377
#define FMRADIOINTERFACE_H_1363064377

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.nnaabbcc.fmradio
 */
class FMRadioInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.nnaabbcc.fmradio"; }

public:
    FMRadioInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~FMRadioInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> exit()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("exit"), argumentList);
    }

    inline QDBusPendingReply<> scan(bool forward)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(forward);
        return asyncCallWithArgumentList(QLatin1String("scan"), argumentList);
    }

    inline QDBusPendingReply<> start()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("start"), argumentList);
    }

    inline QDBusPendingReply<> stop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("stop"), argumentList);
    }

    inline QDBusPendingReply<> tuneToFreq(double freq)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(freq);
        return asyncCallWithArgumentList(QLatin1String("tuneToFreq"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void signalChanged(uint signal, bool stereo);
    void tuned(double freq, uint signal);
};

namespace com {
  namespace nnaabbcc {
    typedef ::FMRadioInterface fmradio;
  }
}
#endif
